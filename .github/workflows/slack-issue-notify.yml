set -euo pipefail

TOKEN="${SLACK_USER_TOKEN:-}"
if [ -z "$TOKEN" ]; then
  TOKEN="${SLACK_BOT_TOKEN:-}"
fi
if [ -z "$TOKEN" ]; then
  echo "Missing Slack token. Add SLACK_USER_TOKEN or SLACK_BOT_TOKEN to repo secrets."
  exit 1
fi

if [ -z "${SLACK_CHANNEL_ID:-}" ]; then
  echo "Missing SLACK_CHANNEL_ID secret (channel ID, not name)."
  exit 1
fi

if [ -n "${CODEX_USER_ID:-}" ]; then
  MENTION="<@${CODEX_USER_ID}>"
else
  MENTION=""
fi

BODY="${ISSUE_BODY:-No description provided.}"

# Proper jq interpolation â€” no '+' signs
PAYLOAD=$(jq -n \
  --arg channel "$SLACK_CHANNEL_ID" \
  --arg mention "$MENTION" \
  --arg title "$ISSUE_TITLE" \
  --arg user "$ISSUE_USER" \
  --arg body "$BODY" \
  --arg url "$ISSUE_URL" \
  '{
    channel: $channel,
    text: "\($mention) fix this issue: *\($title)*",
    blocks: [
      {
        "type": "section",
        "text": { "type": "mrkdwn", "text": "\($mention) fix this issue: *\($title)*" }
      },
      {
        "type": "section",
        "fields": [
          { "type": "mrkdwn", "text": "*Author:*\n\($user)" },
          { "type": "mrkdwn", "text": "*URL:*\n<\($url)|\($title)>" }
        ]
      },
      {
        "type": "section",
        "text": { "type": "mrkdwn", "text": "*Description:*\n\($body)" }
      }
    ]
  }')

echo "Sending payload to Slack..."
http_status=$(curl -s -o /tmp/resp.json -w "%{http_code}" \
  -X POST "https://slack.com/api/chat.postMessage" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json; charset=utf-8" \
  --data "$PAYLOAD")

echo "HTTP status: $http_status"
cat /tmp/resp.json

ok=$(jq -r '.ok // "false"' /tmp/resp.json)
if [ "$ok" != "true" ]; then
  echo "Slack error:"
  jq -r '.error' /tmp/resp.json || true
  exit 1
fi

echo "Slack message sent successfully."
