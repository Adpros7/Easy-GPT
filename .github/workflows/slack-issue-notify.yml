name: Notify Codex on Issue Creation

on:
  issues:
    types: [opened]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Send issue notification to Slack
        env:
          SLACK_USER_TOKEN: ${{ secrets.SLACK_USER_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          CODEX_USER_ID: ${{ secrets.CODEX_USER_ID }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_USER: ${{ github.event.issue.user.login }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
        run: |
          set -euo pipefail

          TOKEN="$SLACK_USER_TOKEN"
          if [ -z "$TOKEN" ]; then
            echo "Missing SLACK_USER_TOKEN secret."
            exit 1
          fi
          if [ -z "${SLACK_CHANNEL_ID:-}" ]; then
            echo "Missing SLACK_CHANNEL_ID secret (channel ID, not name)."
            exit 1
          fi

          if [ -n "${CODEX_USER_ID:-}" ]; then
            MENTION="<@${CODEX_USER_ID}>"
          else
            MENTION=""
          fi

          BODY="${ISSUE_BODY:-No description provided.}"

          # build JSON payload cleanly using jq
          PAYLOAD=$(jq -n \
            --arg channel "$SLACK_CHANNEL_ID" \
            --arg mention "$MENTION" \
            --arg title "$ISSUE_TITLE" \
            --arg user "$ISSUE_USER" \
            --arg body "$BODY" \
            --arg url "$ISSUE_URL" \
            '{
              channel: $channel,
              text: "\($mention) fix this issue and create a PR: *\($title)*",
              blocks: [
                {
                  "type": "section",
                  "text": { "type": "mrkdwn", "text": "\($mention) fix this issue: *\($title)*" }
                },
                {
                  "type": "section",
                  "fields": [
                    { "type": "mrkdwn", "text": "*Author:*\n\($user)" },
                    { "type": "mrkdwn", "text": "*URL:*\n<\($url)|\($title)>" }
                  ]
                },
                {
                  "type": "section",
                  "text": { "type": "mrkdwn", "text": "*Description:*\n\($body)" }
                }
              ]
            }')

          echo "Sending payload to Slack..."
          http_status=$(curl -s -o /tmp/resp.json -w "%{http_code}" \
            -X POST "https://slack.com/api/chat.postMessage" \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: application/json; charset=utf-8" \
            --data "$PAYLOAD")

          echo "HTTP status: $http_status"
          cat /tmp/resp.json

          ok=$(jq -r '.ok // "false"' /tmp/resp.json)
          if [ "$ok" != "true" ]; then
            echo "Slack error:"
            jq -r '.error' /tmp/resp.json || true
            exit 1
          fi

          echo "Slack message sent successfully."
