name: Codex Auto-Fix on Issue Creation

on:
  issues:
    types: [opened]

permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  auto-fix:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.state == 'open' }}
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ISSUE_TITLE: ${{ github.event.issue.title }}
      ISSUE_BODY: ${{ github.event.issue.body }}
      ISSUE_URL: ${{ github.event.issue.html_url }}
      ISSUE_USER: ${{ github.event.issue.user.login }}
    steps:
      - name: Check OpenAI API Key
        run: |
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "Missing OPENAI_API_KEY secret." >&2
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Run Codex to fix issue
        id: codex
        uses: openai/codex-action@main
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          prompt: >-
            You are working in this repository. The user opened an issue titled:
            "${{ env.ISSUE_TITLE }}".
            Description:
            ${{ env.ISSUE_BODY }}

            Identify the problem described in the issue, locate the relevant code,
            implement the minimal change necessary to fix it, and stop.
            Keep edits small and targeted. Do not refactor unrelated code.

      - name: Verify tests
        run: npm test --silent || true

      - name: Create pull request with Codex fix
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "fix: auto-fix issue #${{ github.event.issue.number }} via Codex"
          branch: codex/auto-fix-${{ github.event.issue.number }}
          title: "Auto-fix for issue #${{ github.event.issue.number }}: ${{ env.ISSUE_TITLE }}"
          body: |
            Codex automatically generated this PR in response to issue #${{ github.event.issue.number }}.
            **Issue:** ${{ env.ISSUE_URL }}
            **Author:** @${{ env.ISSUE_USER }}
            **Description:** ${{ env.ISSUE_BODY }}
            This PR contains the smallest possible fix inferred by Codex.
